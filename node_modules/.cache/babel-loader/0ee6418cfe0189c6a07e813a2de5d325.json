{"ast":null,"code":"var _jsxFileName = \"/Users/sunita/Sites/Erptech/its-Disco/src/pages/promo/PromAddform.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Button, Checkbox, Form, Input, Space } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formItemLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 8\n  }\n};\nconst formTailLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 8,\n    offset: 4\n  }\n};\n\nconst PromAddform = () => {\n  _s();\n\n  const pageActive = useRef(false);\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.auth.token);\n  const issuccess = useSelector(state => state.user.issuccess);\n  const [form] = Form.useForm();\n  const [checkNick, setCheckNick] = useState(false);\n  useEffect(() => {\n    form.validateFields(['nickname']);\n  }, [checkNick]);\n\n  const onCheckboxChange = e => {\n    setCheckNick(e.target.checked);\n  };\n\n  const onCheck = async () => {\n    try {\n      const values = await form.validateFields();\n      console.log('Success:', values);\n    } catch (errorInfo) {\n      console.log('Failed:', errorInfo);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Space, {\n      direction: \"vertical\",\n      style: {\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        name: \"dynamic_rule\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n          name: \"username\",\n          label: \"Name\",\n          rules: [{\n            required: true,\n            message: 'Please input your name'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Please input your name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n          name: \"nickname\",\n          label: \"Nickname\",\n          rules: [{\n            required: checkNick,\n            message: 'Please input your nickname'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Please input your nickname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formTailLayout,\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: checkNick,\n            onChange: onCheckboxChange,\n            children: \"Nickname is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formTailLayout,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: onCheck,\n            children: \"Check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n};\n\n_s(PromAddform, \"JsRFzmFVu8mpXn2oxEhYl6LqE+Y=\", false, function () {\n  return [useDispatch, useSelector, useSelector, Form.useForm];\n});\n\n_c = PromAddform;\nexport default PromAddform;\n\nvar _c;\n\n$RefreshReg$(_c, \"PromAddform\");","map":{"version":3,"sources":["/Users/sunita/Sites/Erptech/its-Disco/src/pages/promo/PromAddform.js"],"names":["React","useEffect","useState","useRef","Button","Checkbox","Form","Input","Space","useSelector","useDispatch","formItemLayout","labelCol","span","wrapperCol","formTailLayout","offset","PromAddform","pageActive","dispatch","token","state","auth","issuccess","user","form","useForm","checkNick","setCheckNick","validateFields","onCheckboxChange","e","target","checked","onCheck","values","console","log","errorInfo","width","required","message"],"mappings":"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","sourcesContent":["import React, {useEffect, useState,useRef,} from 'react';\nimport {Button, Checkbox, Form, Input, Space} from 'antd';\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nconst formItemLayout = {\n    labelCol: {\n      span: 4,\n    },\n    wrapperCol: {\n      span: 8,\n    },\n  };\n  const formTailLayout = {\n    labelCol: {\n      span: 4,\n    },\n    wrapperCol: {\n      span: 8,\n      offset: 4,\n    },\n  };\n  \n\nconst PromAddform = () => {\n  const pageActive = useRef(false);\n  const dispatch = useDispatch()\n  const token = useSelector((state) => state.auth.token)\n  const issuccess = useSelector((state) => state.user.issuccess)\n\n\n\n\n    const [form] = Form.useForm();\n    const [checkNick, setCheckNick] = useState(false);\n    useEffect(() => {\n      form.validateFields(['nickname']);\n    }, [checkNick]);\n  \n    const onCheckboxChange = (e) => {\n      setCheckNick(e.target.checked);\n    };\n  \n    const onCheck = async () => {\n      try {\n        const values = await form.validateFields();\n        console.log('Success:', values);\n      } catch (errorInfo) {\n        console.log('Failed:', errorInfo);\n      }\n    };\n\n  return (\n    <>\n     <Space direction='vertical' style={{width: '100%'}}>\n      <Form form={form} name='dynamic_rule'>\n        <Form.Item\n          {...formItemLayout}\n          name='username'\n          label='Name'\n          rules={[\n            {\n              required: true,\n              message: 'Please input your name',\n            },\n          ]}>\n          <Input placeholder='Please input your name' />\n        </Form.Item>\n        <Form.Item\n          {...formItemLayout}\n          name='nickname'\n          label='Nickname'\n          rules={[\n            {\n              required: checkNick,\n              message: 'Please input your nickname',\n            },\n          ]}>\n          <Input placeholder='Please input your nickname' />\n        </Form.Item>\n        <Form.Item {...formTailLayout}>\n          <Checkbox checked={checkNick} onChange={onCheckboxChange}>\n            Nickname is required\n          </Checkbox>\n        </Form.Item>\n        <Form.Item {...formTailLayout}>\n          <Button type='primary' onClick={onCheck}>\n            Check\n          </Button>\n        </Form.Item>\n      </Form>\n    </Space>\n    </>\n  );\n};\n\nexport default PromAddform;\n\n"]},"metadata":{},"sourceType":"module"}