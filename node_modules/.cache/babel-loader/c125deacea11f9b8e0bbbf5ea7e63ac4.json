{"ast":null,"code":"var _jsxFileName = \"/Users/sunita/Sites/Erptech/its-Disco/src/@crema/core/AppSelect/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Select } from 'antd';\nimport PropTypes from 'prop-types';\nimport './index.style.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppSelect = ({\n  menus,\n  onChange,\n  defaultValue,\n  selectionKey\n}) => {\n  _s();\n\n  const [selectionType, setSelectionType] = useState(defaultValue);\n\n  const handleSelectionType = value => {\n    setSelectionType(value);\n    onChange(value);\n  };\n\n  const {\n    Option\n  } = Select;\n  return /*#__PURE__*/_jsxDEV(Select, {\n    defaultValue: defaultValue,\n    value: selectionType,\n    onChange: handleSelectionType,\n    className: \"select-box\",\n    children: menus.map((menu, index) => /*#__PURE__*/_jsxDEV(Option, {\n      value: selectionKey ? menu[selectionKey] : menu,\n      className: \"select-option\",\n      children: selectionKey ? menu[selectionKey] : menu\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppSelect, \"Jwdo0kx8IInWs/X8kBkiRw4dPbY=\");\n\n_c = AppSelect;\nexport default AppSelect;\nAppSelect.propTypes = {\n  menus: PropTypes.array,\n  onChange: PropTypes.func,\n  defaultValue: PropTypes.any,\n  selectionKey: PropTypes.any\n};\nAppSelect.defaultProps = {\n  menus: [],\n  defaultValue: '',\n  selectionKey: ''\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AppSelect\");","map":{"version":3,"sources":["/Users/sunita/Sites/Erptech/its-Disco/src/@crema/core/AppSelect/index.js"],"names":["React","useState","Select","PropTypes","AppSelect","menus","onChange","defaultValue","selectionKey","selectionType","setSelectionType","handleSelectionType","value","Option","map","menu","index","propTypes","array","func","any","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,QAAqB,MAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,oBAAP;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,YAAlB;AAAgCC,EAAAA;AAAhC,CAAD,KAAmD;AAAA;;AACnE,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAACM,YAAD,CAAlD;;AAEA,QAAMI,mBAAmB,GAAIC,KAAD,IAAW;AACrCF,IAAAA,gBAAgB,CAACE,KAAD,CAAhB;AACAN,IAAAA,QAAQ,CAACM,KAAD,CAAR;AACD,GAHD;;AAKA,QAAM;AAACC,IAAAA;AAAD,MAAWX,MAAjB;AAEA,sBACE,QAAC,MAAD;AACE,IAAA,YAAY,EAAEK,YADhB;AAEE,IAAA,KAAK,EAAEE,aAFT;AAGE,IAAA,QAAQ,EAAEE,mBAHZ;AAIE,IAAA,SAAS,EAAC,YAJZ;AAAA,cAKGN,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT,QAAC,MAAD;AAEE,MAAA,KAAK,EAAER,YAAY,GAAGO,IAAI,CAACP,YAAD,CAAP,GAAwBO,IAF7C;AAGE,MAAA,SAAS,EAAC,eAHZ;AAAA,gBAIGP,YAAY,GAAGO,IAAI,CAACP,YAAD,CAAP,GAAwBO;AAJvC,OACOC,KADP;AAAA;AAAA;AAAA;AAAA,YADD;AALH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA1BD;;GAAMZ,S;;KAAAA,S;AA4BN,eAAeA,SAAf;AACAA,SAAS,CAACa,SAAV,GAAsB;AACpBZ,EAAAA,KAAK,EAAEF,SAAS,CAACe,KADG;AAEpBZ,EAAAA,QAAQ,EAAEH,SAAS,CAACgB,IAFA;AAGpBZ,EAAAA,YAAY,EAAEJ,SAAS,CAACiB,GAHJ;AAIpBZ,EAAAA,YAAY,EAAEL,SAAS,CAACiB;AAJJ,CAAtB;AAMAhB,SAAS,CAACiB,YAAV,GAAyB;AACvBhB,EAAAA,KAAK,EAAE,EADgB;AAEvBE,EAAAA,YAAY,EAAE,EAFS;AAGvBC,EAAAA,YAAY,EAAE;AAHS,CAAzB","sourcesContent":["import React, {useState} from 'react';\r\nimport {Select} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport './index.style.less';\r\n\r\nconst AppSelect = ({menus, onChange, defaultValue, selectionKey}) => {\r\n  const [selectionType, setSelectionType] = useState(defaultValue);\r\n\r\n  const handleSelectionType = (value) => {\r\n    setSelectionType(value);\r\n    onChange(value);\r\n  };\r\n\r\n  const {Option} = Select;\r\n\r\n  return (\r\n    <Select\r\n      defaultValue={defaultValue}\r\n      value={selectionType}\r\n      onChange={handleSelectionType}\r\n      className='select-box'>\r\n      {menus.map((menu, index) => (\r\n        <Option\r\n          key={index}\r\n          value={selectionKey ? menu[selectionKey] : menu}\r\n          className='select-option'>\r\n          {selectionKey ? menu[selectionKey] : menu}\r\n        </Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default AppSelect;\r\nAppSelect.propTypes = {\r\n  menus: PropTypes.array,\r\n  onChange: PropTypes.func,\r\n  defaultValue: PropTypes.any,\r\n  selectionKey: PropTypes.any,\r\n};\r\nAppSelect.defaultProps = {\r\n  menus: [],\r\n  defaultValue: '',\r\n  selectionKey: '',\r\n};\r\n"]},"metadata":{},"sourceType":"module"}