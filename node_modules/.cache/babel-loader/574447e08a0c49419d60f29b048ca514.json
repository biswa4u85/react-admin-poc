{"ast":null,"code":"var _jsxFileName = \"/Users/sunita/Sites/Erptech/react-admin-poc/src/@crema/core/AppLayout/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Layout } from 'antd';\nimport { useUrlSearchParams } from 'use-url-search-params';\nimport './layout.style.less';\nimport { AppContentView } from '../../index';\nimport Layouts from './Layouts';\nimport { LayoutType } from '../../../shared/constants/AppEnums';\nimport AppScrollbar from '../AppScrollbar';\nimport { useLayoutActionsContext, useLayoutContext } from '../../utility/AppContextProvider/LayoutContextProvider';\nimport { useSelector } from 'react-redux';\nimport { useSidebarActionsContext } from '../../utility/AppContextProvider/SidebarContextProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppLayout = () => {\n  _s();\n\n  const isAuthenticated = useSelector(state => state.auth.token);\n  const {\n    navStyle,\n    layoutType\n  } = useLayoutContext();\n  const {\n    updateNavStyle\n  } = useLayoutActionsContext();\n  const {\n    updateMenuStyle,\n    setSidebarBgImage\n  } = useSidebarActionsContext();\n  const [params] = useUrlSearchParams();\n  const AppLayout = Layouts[navStyle];\n  useEffect(() => {\n    if (layoutType === LayoutType.BOXED) {\n      document.body.classList.add('boxedLayout');\n      document.body.classList.remove('framedLayout');\n    } else if (layoutType === LayoutType.FRAMED) {\n      document.body.classList.remove('boxedLayout');\n      document.body.classList.add('framedLayout');\n    } else {\n      document.body.classList.remove('boxedLayout');\n      document.body.classList.remove('framedLayout');\n    }\n  }, [layoutType]);\n  useEffect(() => {\n    if (params.layout) updateNavStyle(params.layout);\n    if (params.menuStyle) updateMenuStyle(params.menuStyle);\n    if (params.sidebarImage) setSidebarBgImage(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: isAuthenticated ? /*#__PURE__*/_jsxDEV(AppLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Layout, {\n      className: \"auth\",\n      children: /*#__PURE__*/_jsxDEV(AppScrollbar, {\n        className: \"main-auth-scrollbar\",\n        children: /*#__PURE__*/_jsxDEV(AppContentView, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppLayout, \"Gfd2t6yhfg/GI2/YHQ3Njg3o7Ds=\", false, function () {\n  return [useSelector, useLayoutContext, useLayoutActionsContext, useSidebarActionsContext, useUrlSearchParams];\n});\n\n_c = AppLayout;\nexport default _c2 = /*#__PURE__*/React.memo(AppLayout);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppLayout\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/sunita/Sites/Erptech/react-admin-poc/src/@crema/core/AppLayout/index.js"],"names":["React","useEffect","Layout","useUrlSearchParams","AppContentView","Layouts","LayoutType","AppScrollbar","useLayoutActionsContext","useLayoutContext","useSelector","useSidebarActionsContext","AppLayout","isAuthenticated","state","auth","token","navStyle","layoutType","updateNavStyle","updateMenuStyle","setSidebarBgImage","params","BOXED","document","body","classList","add","remove","FRAMED","layout","menuStyle","sidebarImage","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,OAAO,qBAAP;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,oCAA3B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SACEC,uBADF,EAEEC,gBAFF,QAGO,wDAHP;AAIA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,wBAAT,QAAyC,yDAAzC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,eAAe,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,KAAvB,CAAnC;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2BT,gBAAgB,EAAjD;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAqBX,uBAAuB,EAAlD;AACA,QAAM;AAAEY,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAyCV,wBAAwB,EAAvE;AACA,QAAM,CAACW,MAAD,IAAWnB,kBAAkB,EAAnC;AAEA,QAAMS,SAAS,GAAGP,OAAO,CAACY,QAAD,CAAzB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,UAAU,KAAKZ,UAAU,CAACiB,KAA9B,EAAqC;AACnCC,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,aAA5B;AACAH,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,cAA/B;AACD,KAHD,MAGO,IAAIV,UAAU,KAAKZ,UAAU,CAACuB,MAA9B,EAAsC;AAC3CL,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,aAA/B;AACAJ,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,cAA5B;AACD,KAHM,MAGA;AACLH,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,aAA/B;AACAJ,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,cAA/B;AACD;AACF,GAXQ,EAWN,CAACV,UAAD,CAXM,CAAT;AAaAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,MAAM,CAACQ,MAAX,EAAmBX,cAAc,CAACG,MAAM,CAACQ,MAAR,CAAd;AACnB,QAAIR,MAAM,CAACS,SAAX,EAAsBX,eAAe,CAACE,MAAM,CAACS,SAAR,CAAf;AACtB,QAAIT,MAAM,CAACU,YAAX,EAAyBX,iBAAiB,CAAC,IAAD,CAAjB;AAC1B,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,cACGR,eAAe,gBACd,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADc,gBAGd,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,SAAS,EAAC,qBAAxB;AAAA,+BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAzCD;;GAAMD,S;UACoBF,W,EACSD,gB,EACND,uB,EACoBG,wB,EAC9BR,kB;;;KALbS,S;AA2CN,kCAAeZ,KAAK,CAACiC,IAAN,CAAWrB,SAAX,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Layout } from 'antd';\r\nimport { useUrlSearchParams } from 'use-url-search-params';\r\nimport './layout.style.less';\r\nimport { AppContentView } from '../../index';\r\nimport Layouts from './Layouts';\r\nimport { LayoutType } from '../../../shared/constants/AppEnums';\r\nimport AppScrollbar from '../AppScrollbar';\r\nimport {\r\n  useLayoutActionsContext,\r\n  useLayoutContext,\r\n} from '../../utility/AppContextProvider/LayoutContextProvider';\r\nimport { useSelector } from 'react-redux'\r\nimport { useSidebarActionsContext } from '../../utility/AppContextProvider/SidebarContextProvider';\r\n\r\nconst AppLayout = () => {\r\n  const isAuthenticated = useSelector((state) => state.auth.token)\r\n  const { navStyle, layoutType } = useLayoutContext();\r\n  const { updateNavStyle } = useLayoutActionsContext();\r\n  const { updateMenuStyle, setSidebarBgImage } = useSidebarActionsContext();\r\n  const [params] = useUrlSearchParams();\r\n\r\n  const AppLayout = Layouts[navStyle];\r\n\r\n  useEffect(() => {\r\n    if (layoutType === LayoutType.BOXED) {\r\n      document.body.classList.add('boxedLayout');\r\n      document.body.classList.remove('framedLayout');\r\n    } else if (layoutType === LayoutType.FRAMED) {\r\n      document.body.classList.remove('boxedLayout');\r\n      document.body.classList.add('framedLayout');\r\n    } else {\r\n      document.body.classList.remove('boxedLayout');\r\n      document.body.classList.remove('framedLayout');\r\n    }\r\n  }, [layoutType]);\r\n\r\n  useEffect(() => {\r\n    if (params.layout) updateNavStyle(params.layout);\r\n    if (params.menuStyle) updateMenuStyle(params.menuStyle);\r\n    if (params.sidebarImage) setSidebarBgImage(true);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isAuthenticated ? (\r\n        <AppLayout />\r\n      ) : (\r\n        <Layout className='auth'>\r\n          <AppScrollbar className='main-auth-scrollbar'>\r\n            <AppContentView />\r\n          </AppScrollbar>\r\n        </Layout>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default React.memo(AppLayout);\r\n"]},"metadata":{},"sourceType":"module"}