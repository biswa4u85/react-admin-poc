{"ast":null,"code":"var _jsxFileName = \"/Users/sunita/Sites/Erptech/react-admin-poc/src/@crema/core/AppLayout/components/AppVerticalNav/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Menu } from 'antd';\nimport { getRouteMenus } from '../../../../utility/VerticalMenuUtils';\nimport clsx from 'clsx';\nimport './index.style.less';\nimport defaultConfig from '../../../../utility/AppContextProvider/defaultConfig';\nimport { useSidebarContext } from '../../../../utility/AppContextProvider/SidebarContextProvider';\nimport { MenuStyle } from '../../../../../shared/constants/AppEnums';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppVerticalNav = () => {\n  _s();\n\n  const {\n    menuStyle,\n    sidebarColorSet\n  } = useSidebarContext();\n  const {\n    pathname\n  } = useLocation();\n  const selectedKeys = pathname.substr(1).split('/');\n  const defaultOpenKeys = selectedKeys[0];\n  const [openKeys, setOpenKeys] = useState([defaultOpenKeys]);\n  useEffect(() => {\n    setOpenKeys([selectedKeys[selectedKeys.length - 2]]);\n  }, []);\n\n  const onOpenChange = keys => {\n    const latestOpenKey = keys.find(key => openKeys.indexOf(key) === -1);\n    setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    theme: sidebarColorSet.mode,\n    mode: \"inline\",\n    className: clsx('app-main-sidebar-menu ', {\n      'menu-rounded': menuStyle === MenuStyle.ROUNDED,\n      'menu-rounded rounded-menu-reverse': menuStyle === MenuStyle.ROUNDED_REVERSE,\n      'menu-rounded standard-menu': menuStyle === MenuStyle.STANDARD,\n      'menu-rounded curved-menu': menuStyle === MenuStyle.CURVED_MENU,\n      'bg-color-menu': sidebarColorSet.sidebarBgColor !== defaultConfig.sidebar.colorSet.sidebarBgColor\n    }),\n    openKeys: openKeys,\n    onOpenChange: onOpenChange,\n    selectedKeys: [selectedKeys[selectedKeys.length - 1]],\n    children: getRouteMenus(selectedKeys)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppVerticalNav, \"+lVt0o7xboZVoa9SY3eMV8LithE=\", false, function () {\n  return [useSidebarContext, useLocation];\n});\n\n_c = AppVerticalNav;\nexport default AppVerticalNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppVerticalNav\");","map":{"version":3,"sources":["/Users/sunita/Sites/Erptech/react-admin-poc/src/@crema/core/AppLayout/components/AppVerticalNav/index.js"],"names":["React","useEffect","useState","useLocation","Menu","getRouteMenus","clsx","defaultConfig","useSidebarContext","MenuStyle","AppVerticalNav","menuStyle","sidebarColorSet","pathname","selectedKeys","substr","split","defaultOpenKeys","openKeys","setOpenKeys","length","onOpenChange","keys","latestOpenKey","find","key","indexOf","mode","ROUNDED","ROUNDED_REVERSE","STANDARD","CURVED_MENU","sidebarBgColor","sidebar","colorSet"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,IAAR,QAAmB,MAAnB;AACA,SAAQC,aAAR,QAA4B,uCAA5B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,oBAAP;AACA,OAAOC,aAAP,MAA0B,sDAA1B;AACA,SAAQC,iBAAR,QAAgC,+DAAhC;AACA,SAAQC,SAAR,QAAwB,0CAAxB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAA+BJ,iBAAiB,EAAtD;AACA,QAAM;AAACK,IAAAA;AAAD,MAAaV,WAAW,EAA9B;AACA,QAAMW,YAAY,GAAGD,QAAQ,CAACE,MAAT,CAAgB,CAAhB,EAAmBC,KAAnB,CAAyB,GAAzB,CAArB;AACA,QAAMC,eAAe,GAAGH,YAAY,CAAC,CAAD,CAApC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,CAACe,eAAD,CAAD,CAAxC;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,WAAW,CAAC,CAACL,YAAY,CAACA,YAAY,CAACM,MAAb,GAAsB,CAAvB,CAAb,CAAD,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,YAAY,GAAIC,IAAD,IAAU;AAC7B,UAAMC,aAAa,GAAGD,IAAI,CAACE,IAAL,CAAWC,GAAD,IAASP,QAAQ,CAACQ,OAAT,CAAiBD,GAAjB,MAA0B,CAAC,CAA9C,CAAtB;AACAN,IAAAA,WAAW,CAACI,aAAa,GAAG,CAACA,aAAD,CAAH,GAAqB,EAAnC,CAAX;AACD,GAHD;;AAKA,sBACE,QAAC,IAAD;AACE,IAAA,KAAK,EAAEX,eAAe,CAACe,IADzB;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,SAAS,EAAErB,IAAI,CAAC,wBAAD,EAA2B;AACxC,sBAAgBK,SAAS,KAAKF,SAAS,CAACmB,OADA;AAExC,2CACEjB,SAAS,KAAKF,SAAS,CAACoB,eAHc;AAIxC,oCAA8BlB,SAAS,KAAKF,SAAS,CAACqB,QAJd;AAKxC,kCAA4BnB,SAAS,KAAKF,SAAS,CAACsB,WALZ;AAMxC,uBACEnB,eAAe,CAACoB,cAAhB,KACAzB,aAAa,CAAC0B,OAAd,CAAsBC,QAAtB,CAA+BF;AARO,KAA3B,CAHjB;AAaE,IAAA,QAAQ,EAAEd,QAbZ;AAcE,IAAA,YAAY,EAAEG,YAdhB;AAeE,IAAA,YAAY,EAAE,CAACP,YAAY,CAACA,YAAY,CAACM,MAAb,GAAsB,CAAvB,CAAb,CAfhB;AAAA,cAgBGf,aAAa,CAACS,YAAD;AAhBhB;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CApCD;;GAAMJ,c;UACiCF,iB,EAClBL,W;;;KAFfO,c;AAsCN,eAAeA,cAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport {Menu} from 'antd';\r\nimport {getRouteMenus} from '../../../../utility/VerticalMenuUtils';\r\nimport clsx from 'clsx';\r\nimport './index.style.less';\r\nimport defaultConfig from '../../../../utility/AppContextProvider/defaultConfig';\r\nimport {useSidebarContext} from '../../../../utility/AppContextProvider/SidebarContextProvider';\r\nimport {MenuStyle} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst AppVerticalNav = () => {\r\n  const {menuStyle, sidebarColorSet} = useSidebarContext();\r\n  const {pathname} = useLocation();\r\n  const selectedKeys = pathname.substr(1).split('/');\r\n  const defaultOpenKeys = selectedKeys[0];\r\n  const [openKeys, setOpenKeys] = useState([defaultOpenKeys]);\r\n\r\n  useEffect(() => {\r\n    setOpenKeys([selectedKeys[selectedKeys.length - 2]]);\r\n  }, []);\r\n\r\n  const onOpenChange = (keys) => {\r\n    const latestOpenKey = keys.find((key) => openKeys.indexOf(key) === -1);\r\n    setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      theme={sidebarColorSet.mode}\r\n      mode='inline'\r\n      className={clsx('app-main-sidebar-menu ', {\r\n        'menu-rounded': menuStyle === MenuStyle.ROUNDED,\r\n        'menu-rounded rounded-menu-reverse':\r\n          menuStyle === MenuStyle.ROUNDED_REVERSE,\r\n        'menu-rounded standard-menu': menuStyle === MenuStyle.STANDARD,\r\n        'menu-rounded curved-menu': menuStyle === MenuStyle.CURVED_MENU,\r\n        'bg-color-menu':\r\n          sidebarColorSet.sidebarBgColor !==\r\n          defaultConfig.sidebar.colorSet.sidebarBgColor,\r\n      })}\r\n      openKeys={openKeys}\r\n      onOpenChange={onOpenChange}\r\n      selectedKeys={[selectedKeys[selectedKeys.length - 1]]}>\r\n      {getRouteMenus(selectedKeys)}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default AppVerticalNav;\r\n"]},"metadata":{},"sourceType":"module"}