{"ast":null,"code":"var _jsxFileName = \"/Users/mamata/Sites/Erptech/react-admin-poc/src/pages/Celebrities/PromAddform.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Checkbox, Form, Col, Input, Space, Upload, Select } from 'antd';\nimport AppComponentCard from '../../@crema/core/AppComponentCard';\nimport AppRowContainer from '../../@crema/core/AppRowContainer/AppRowSimpleContainer';\nimport { UploadOutlined } from '@ant-design/icons'; // uplode\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst props = {\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n  listType: 'picture',\n\n  beforeUpload(file) {\n    return new Promise(resolve => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = () => {\n        const img = document.createElement('img');\n        img.src = reader.result;\n\n        img.onload = () => {\n          const canvas = document.createElement('canvas');\n          canvas.width = img.naturalWidth;\n          canvas.height = img.naturalHeight;\n          const ctx = canvas.getContext('2d');\n          ctx.drawImage(img, 0, 0);\n          ctx.fillStyle = 'red';\n          ctx.textBaseline = 'middle';\n          ctx.font = '33px Arial';\n          ctx.fillText('Ant Design', 20, 20);\n          canvas.toBlob(result => resolve(result));\n        };\n      };\n    });\n  }\n\n}; // uplode\n\nconst formItemLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 8\n  }\n};\nconst formTailLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 8,\n    offset: 4\n  }\n};\n\nconst Listings = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppRowContainer, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        xxl: 12,\n        children: /*#__PURE__*/_jsxDEV(AppComponentCard, {\n          title: 'Add Details',\n          link: 'Add Details',\n          component: PromAddform\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, 'form-g', false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Listings;\n\nconst PromAddform = () => {\n  _s();\n\n  const [form] = Form.useForm();\n  const [checkNick, setCheckNick] = useState(false);\n  useEffect(() => {\n    form.validateFields(['nickname']);\n  }, [checkNick]);\n\n  const onCheckboxChange = e => {\n    setCheckNick(e.target.checked);\n  };\n\n  const onCheck = async () => {\n    try {\n      const values = await form.validateFields();\n      console.log('Success:', values);\n    } catch (errorInfo) {\n      console.log('Failed:', errorInfo);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Space, {\n      direction: \"vertical\",\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        name: \"dynamic_rule\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n          name: \"username\",\n          label: \"Full Name\",\n          rules: [{\n            required: true,\n            message: 'Please input your name'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Please input your name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n          name: \"stagename\",\n          label: \"Stage Name\",\n          rules: [{\n            required: true,\n            message: 'Please enter your Stage Name'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Please enter your Stage Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formTailLayout,\n          name: \"profile\",\n          label: \"Profile\",\n          rules: [{\n            required: true,\n            message: 'Please add Profile Image'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Upload, { ...props,\n            style: {\n              marginLeft: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 29\n              }, this),\n              children: \"Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n          name: \"managername\",\n          label: \"Manager Name\",\n          rules: [{\n            required: true,\n            message: 'Please enter Manager Name'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Please enter Manager Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n          name: \"phone\",\n          label: \"Manager Number\",\n          rules: [{\n            required: true,\n            message: 'Please enter your Manager Number!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Please enter your Manager Number\" // addonBefore={prefixSelector}\n            ,\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n          name: \"id\",\n          label: \"Insta ID\",\n          rules: [{\n            required: true,\n            message: 'Please input your id'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Please input your id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"select\",\n          label: \"Type Of Celebrity\",\n          hasFeedback: true,\n          rules: [{\n            required: true,\n            message: 'Please select Celebrity Type!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Please input your id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n          name: ['user', 'email'],\n          label: \"Email\",\n          rules: [{\n            required: true,\n            type: 'email'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Please input your email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formTailLayout,\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: checkNick,\n          onChange: onCheckboxChange,\n          children: \"Nickname is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formTailLayout,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: onCheck,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(PromAddform, \"g8NVQvz0YHeMB2qLPM57IEfv+DU=\", false, function () {\n  return [Form.useForm];\n});\n\n_c2 = PromAddform;\nexport default Listings;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Listings\");\n$RefreshReg$(_c2, \"PromAddform\");","map":{"version":3,"sources":["/Users/mamata/Sites/Erptech/react-admin-poc/src/pages/Celebrities/PromAddform.js"],"names":["React","useEffect","useState","Button","Checkbox","Form","Col","Input","Space","Upload","Select","AppComponentCard","AppRowContainer","UploadOutlined","props","action","listType","beforeUpload","file","Promise","resolve","reader","FileReader","readAsDataURL","onload","img","document","createElement","src","result","canvas","width","naturalWidth","height","naturalHeight","ctx","getContext","drawImage","fillStyle","textBaseline","font","fillText","toBlob","formItemLayout","labelCol","span","wrapperCol","formTailLayout","offset","Listings","PromAddform","form","useForm","checkNick","setCheckNick","validateFields","onCheckboxChange","e","target","checked","onCheck","values","console","log","errorInfo","required","message","marginLeft","type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Checkbox, Form, Col, Input, Space, Upload , Select} from 'antd';\nimport AppComponentCard from '../../@crema/core/AppComponentCard';\nimport AppRowContainer from '../../@crema/core/AppRowContainer/AppRowSimpleContainer';\nimport { UploadOutlined, } from '@ant-design/icons';\n\n// uplode\nconst props = {\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n  listType: 'picture',\n\n  beforeUpload(file) {\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = () => {\n        const img = document.createElement('img');\n        img.src = reader.result;\n\n        img.onload = () => {\n          const canvas = document.createElement('canvas');\n          canvas.width = img.naturalWidth;\n          canvas.height = img.naturalHeight;\n          const ctx = canvas.getContext('2d');\n          ctx.drawImage(img, 0, 0);\n          ctx.fillStyle = 'red';\n          ctx.textBaseline = 'middle';\n          ctx.font = '33px Arial';\n          ctx.fillText('Ant Design', 20, 20);\n          canvas.toBlob((result) => resolve(result));\n        };\n      };\n    });\n  },\n};\n// uplode\n\n\nconst formItemLayout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n};\nconst formTailLayout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 8,\n    offset: 4,\n  },\n};\n\nconst Listings = () => {\n  return (\n    <>\n      <AppRowContainer>\n        <Col xs={24} xxl={12} key='form-g'>\n          <AppComponentCard\n            title={'Add Details'}\n            link={'Add Details'}\n            component={PromAddform}\n          />\n        </Col>\n      </AppRowContainer>\n    </>\n  );\n};\n\n\nconst PromAddform = () => {\n  const [form] = Form.useForm();\n  const [checkNick, setCheckNick] = useState(false);\n  useEffect(() => {\n    form.validateFields(['nickname']);\n  }, [checkNick]);\n\n  const onCheckboxChange = (e) => {\n    setCheckNick(e.target.checked);\n  };\n\n  const onCheck = async () => {\n    try {\n      const values = await form.validateFields();\n      console.log('Success:', values);\n    } catch (errorInfo) {\n      console.log('Failed:', errorInfo);\n    }\n  };\n\n  return (\n    <>\n      <Space direction='vertical' style={{ width: '100%' }}>\n        <Form form={form} name='dynamic_rule'>\n          <Form.Item\n            {...formItemLayout}\n            name='username'\n            label='Full Name'\n            rules={[\n              {\n                required: true,\n                message: 'Please input your name',\n              },\n            ]}>\n            <Input placeholder='Please input your name' />\n          </Form.Item>\n\n          <Form.Item\n            {...formItemLayout}\n            name='stagename'\n            label='Stage Name'\n            rules={[\n              {\n                required: true,\n                message: 'Please enter your Stage Name',\n              },\n            ]}>\n            <Input placeholder='Please enter your Stage Name' />\n          </Form.Item>\n\n          <Form.Item {...formTailLayout}\n            name='profile'\n            label=\"Profile\"\n            rules={[\n              {\n                required: true,\n                message: 'Please add Profile Image',\n              },\n            ]}\n\n          >\n\n            <Upload {...props} style={{ marginLeft: 0 }} >\n              <Button icon={<UploadOutlined />}>Upload</Button>\n            </Upload>\n\n          </Form.Item>\n\n          <Form.Item\n            {...formItemLayout}\n            name='managername'\n            label='Manager Name'\n            rules={[\n              {\n                required: true,\n                message: 'Please enter Manager Name',\n              },\n            ]}>\n            <Input placeholder='Please enter Manager Name' />\n          </Form.Item>\n\n          <Form.Item\n            {...formItemLayout}\n            name='phone'\n            label='Manager Number'\n            rules={[\n              {\n                required: true,\n                message: 'Please enter your Manager Number!',\n              },\n            ]}>\n            <Input placeholder='Please enter your Manager Number'\n              // addonBefore={prefixSelector}\n              style={{\n                width: '100%',\n              }}\n            />\n          </Form.Item>\n\n          <Form.Item\n            {...formItemLayout}\n            name='id'\n            label='Insta ID'\n            rules={[\n              {\n                required: true,\n                message: 'Please input your id',\n              },\n            ]}>\n            <Input placeholder='Please input your id' />\n          </Form.Item>\n          <Form.Item\n            name='select'\n            label='Type Of Celebrity'\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: 'Please select Celebrity Type!',\n              },\n            ]}>\n                <Input placeholder='Please input your id' />\n            {/* <Select placeholder='Please select Celebrity Type'>\n              <Option value='china'>China</Option>\n              <Option value='usa'>U.S.A</Option>\n            </Select> */}\n          </Form.Item>\n\n\n\n\n\n\n\n\n\n\n\n          {/* \n          <ImgCrop rotate>\n      <Upload\n        action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\n        listType='picture-card'\n        fileList={fileList}\n        onChange={onChange}\n        onPreview={onPreview}>\n        {fileList.length < 5 && '+ Upload'}\n      </Upload>\n    </ImgCrop> */}\n          <Form.Item\n            {...formItemLayout}\n            name={['user', 'email']}\n            label=\"Email\"\n            rules={[\n              {\n                required: true,\n                type: 'email',\n              },\n            ]}\n          >\n            <Input placeholder='Please input your email' />\n          </Form.Item>\n\n\n        </Form>\n\n        <Form.Item {...formTailLayout}>\n          <Checkbox checked={checkNick} onChange={onCheckboxChange}>\n            Nickname is required\n          </Checkbox>\n        </Form.Item>\n        <Form.Item {...formTailLayout}>\n          <Button type='primary' onClick={onCheck}>\n            Add\n          </Button>\n        </Form.Item>\n\n\n      </Space>\n    </>\n  );\n};\n\nexport default Listings;\n\n"]},"metadata":{},"sourceType":"module"}