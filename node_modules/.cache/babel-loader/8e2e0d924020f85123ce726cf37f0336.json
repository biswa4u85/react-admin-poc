{"ast":null,"code":"var _jsxFileName = \"/Users/mamata/Sites/Erptech/react-admin-poc/src/pages/auth/ResetPasswordAwsCognito.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactCodeInput from 'react-code-input';\nimport { Button, Form, Input } from 'antd';\nimport IntlMessages from '../../@crema/utility/IntlMessages';\nimport useIntl from 'react-intl/lib/src/components/useIntl';\nimport './AuthWrapper.style.less'; // import {useDispatch} from 'react-redux';\n// import {useNavigate, useLocation} from 'react-router-dom';\n// import {onSetNewCognitoPassword} from '../../redux/actions';\n\nimport AppPageMetadata from '../../@crema/core/AppPageMetadata';\nimport AuthWrapper from './AuthWrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPasswordAwsCognito = () => {\n  _s();\n\n  const {\n    messages\n  } = useIntl(); // const dispatch = useDispatch();\n  //  const navigate = useNavigate();\n  // const location = useLocation();\n  // const {email} = location.state;\n  // const onFinish = (values) => {\n  //   dispatch(\n  //     onSetNewCognitoPassword(email, values.pin, values.newPassword, history),\n  //   );\n  // };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(AppPageMetadata, {\n      title: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-recon-content\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"reset-form\",\n        name: \"basic\",\n        initialValues: {\n          remember: true\n        } // onFinish={onFinish}\n        ,\n        onFinishFailed: onFinishFailed,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"pin\",\n          className: \"form-field\",\n          rules: [{\n            required: true,\n            message: 'Please input your Pin!'\n          }],\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n              id: \"common.verificationMessage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReactCodeInput, {\n            type: \"password\",\n            fields: 6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"newPassword\",\n          className: \"form-field\",\n          rules: [{\n            required: true,\n            message: 'Please input your New Password!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            placeholder: messages['common.newPassword']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"confirmPassword\",\n          className: \"form-field\",\n          rules: [{\n            required: true,\n            message: 'Please input your Retype Password!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            placeholder: messages['common.retypePassword']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          className: \"reset-btn\",\n          children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n            id: \"common.resetMyPassword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPasswordAwsCognito, \"jEx4wrzqey4lWjRZEOp2SbNhCqQ=\", false, function () {\n  return [useIntl];\n});\n\n_c = ResetPasswordAwsCognito;\nexport default ResetPasswordAwsCognito;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPasswordAwsCognito\");","map":{"version":3,"sources":["/Users/mamata/Sites/Erptech/react-admin-poc/src/pages/auth/ResetPasswordAwsCognito.js"],"names":["React","ReactCodeInput","Button","Form","Input","IntlMessages","useIntl","AppPageMetadata","AuthWrapper","ResetPasswordAwsCognito","messages","onFinishFailed","errorInfo","console","log","remember","required","message"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactCodeInput from 'react-code-input';\r\nimport {Button, Form, Input} from 'antd';\r\nimport IntlMessages from '../../@crema/utility/IntlMessages';\r\nimport useIntl from 'react-intl/lib/src/components/useIntl';\r\nimport './AuthWrapper.style.less';\r\n// import {useDispatch} from 'react-redux';\r\n// import {useNavigate, useLocation} from 'react-router-dom';\r\n// import {onSetNewCognitoPassword} from '../../redux/actions';\r\nimport AppPageMetadata from '../../@crema/core/AppPageMetadata';\r\nimport AuthWrapper from './AuthWrapper';\r\n\r\nconst ResetPasswordAwsCognito = () => {\r\n  const {messages} = useIntl();\r\n  // const dispatch = useDispatch();\r\n  //  const navigate = useNavigate();\r\n  // const location = useLocation();\r\n\r\n  // const {email} = location.state;\r\n  // const onFinish = (values) => {\r\n  //   dispatch(\r\n  //     onSetNewCognitoPassword(email, values.pin, values.newPassword, history),\r\n  //   );\r\n  // };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <AuthWrapper>\r\n      <AppPageMetadata title='Reset Password' />\r\n\r\n      <div className='auth-recon-content'>\r\n        <Form\r\n          className='reset-form'\r\n          name='basic'\r\n          initialValues={{remember: true}}\r\n          // onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}>\r\n          <Form.Item\r\n            name='pin'\r\n            className='form-field'\r\n            rules={[{required: true, message: 'Please input your Pin!'}]}>\r\n            <p>\r\n              <IntlMessages id='common.verificationMessage' />\r\n            </p>\r\n\r\n            <ReactCodeInput type='password' fields={6} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name='newPassword'\r\n            className='form-field'\r\n            rules={[\r\n              {required: true, message: 'Please input your New Password!'},\r\n            ]}>\r\n            <Input\r\n              type='password'\r\n              placeholder={messages['common.newPassword']}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name='confirmPassword'\r\n            className='form-field'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your Retype Password!',\r\n              },\r\n            ]}>\r\n            <Input\r\n              type='password'\r\n              placeholder={messages['common.retypePassword']}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Button type='primary' htmlType='submit' className='reset-btn'>\r\n            <IntlMessages id='common.resetMyPassword' />\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordAwsCognito;\r\n"]},"metadata":{},"sourceType":"module"}