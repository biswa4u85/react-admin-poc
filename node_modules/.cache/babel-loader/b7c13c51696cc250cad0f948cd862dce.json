{"ast":null,"code":"var _jsxFileName = \"/Users/mamata/Sites/Erptech/react-admin-poc/src/pages/auth/ConfirmSignupAwsCognito.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button } from 'antd';\nimport IntlMessages from '../../@crema/utility/IntlMessages';\nimport ReactCodeInput from 'react-code-input';\nimport './AuthWrapper.style.less';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { fetchError } from '../../redux/actions';\nimport { useIntl } from 'react-intl';\nimport AppPageMetadata from '../../@crema/core/AppPageMetadata';\nimport AuthWrapper from './AuthWrapper';\nimport { useAuthMethod } from '../../@crema/utility/AuthHooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConfirmSignupAwsCognito = () => {\n  _s();\n\n  const {\n    confirmCognitoUserSignup\n  } = useAuthMethod();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    messages\n  } = useIntl();\n\n  const handleSubmit = () => {\n    const {\n      email\n    } = location.state || {};\n\n    if (email && pin.length === 6) {\n      confirmCognitoUserSignup(email, pin);\n    } else if (!email) {\n      navigate('/signup');\n      fetchError(messages['validation.tryAgain']);\n    } else {\n      fetchError(messages['validation.pinLength']);\n    }\n  };\n\n  const [pin, setPin] = useState('');\n  return /*#__PURE__*/_jsxDEV(AuthWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(AppPageMetadata, {\n      title: \"Confirm Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-recon-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirm-content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n            id: \"common.verificationMessage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirm-code-input\",\n        children: /*#__PURE__*/_jsxDEV(ReactCodeInput, {\n          type: \"password\",\n          value: pin,\n          fields: 6,\n          onChange: value => setPin(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        className: \"confirm-btn\",\n        onClick: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n          id: \"common.submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConfirmSignupAwsCognito, \"w9QD+ONA/T0MJEtn3qg85AoyCqI=\", false, function () {\n  return [useAuthMethod, useNavigate, useLocation, useIntl];\n});\n\n_c = ConfirmSignupAwsCognito;\nexport default ConfirmSignupAwsCognito;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmSignupAwsCognito\");","map":{"version":3,"sources":["/Users/mamata/Sites/Erptech/react-admin-poc/src/pages/auth/ConfirmSignupAwsCognito.js"],"names":["React","useState","Button","IntlMessages","ReactCodeInput","useNavigate","useLocation","fetchError","useIntl","AppPageMetadata","AuthWrapper","useAuthMethod","ConfirmSignupAwsCognito","confirmCognitoUserSignup","navigate","location","messages","handleSubmit","email","state","pin","length","setPin","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,QAAqB,MAArB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,0BAAP;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,kBAAvC;AACA,SAAQC,UAAR,QAAyB,qBAAzB;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,aAAR,QAA4B,gCAA5B;;;AAEA,MAAMC,uBAAuB,GAAG,MAAM;AAAA;;AACpC,QAAM;AAACC,IAAAA;AAAD,MAA6BF,aAAa,EAAhD;AACA,QAAMG,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAM;AAACU,IAAAA;AAAD,MAAaR,OAAO,EAA1B;;AACA,QAAMS,YAAY,GAAG,MAAM;AACzB,UAAM;AAACC,MAAAA;AAAD,QAAUH,QAAQ,CAACI,KAAT,IAAkB,EAAlC;;AACA,QAAID,KAAK,IAAIE,GAAG,CAACC,MAAJ,KAAe,CAA5B,EAA+B;AAC7BR,MAAAA,wBAAwB,CAACK,KAAD,EAAQE,GAAR,CAAxB;AACD,KAFD,MAEO,IAAI,CAACF,KAAL,EAAY;AACjBJ,MAAAA,QAAQ,CAAC,SAAD,CAAR;AACAP,MAAAA,UAAU,CAACS,QAAQ,CAAC,qBAAD,CAAT,CAAV;AACD,KAHM,MAGA;AACLT,MAAAA,UAAU,CAACS,QAAQ,CAAC,sBAAD,CAAT,CAAV;AACD;AACF,GAVD;;AAWA,QAAM,CAACI,GAAD,EAAME,MAAN,IAAgBrB,QAAQ,CAAC,EAAD,CAA9B;AAEA,sBACE,QAAC,WAAD;AAAA,4BACE,QAAC,eAAD;AAAiB,MAAA,KAAK,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE;AAAA,iCACE,QAAC,YAAD;AAAc,YAAA,EAAE,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACE,QAAC,cAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAEmB,GAFT;AAGE,UAAA,MAAM,EAAE,CAHV;AAIE,UAAA,QAAQ,EAAGG,KAAD,IAAWD,MAAM,CAACC,KAAD;AAJ7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAgBE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,SAAS,EAAC,aAAjC;AAA+C,QAAA,OAAO,EAAEN,YAAxD;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,EAAE,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA7CD;;GAAML,uB;UAC+BD,a,EAClBN,W,EACAC,W,EAEEE,O;;;KALfI,uB;AA+CN,eAAeA,uBAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {Button} from 'antd';\r\nimport IntlMessages from '../../@crema/utility/IntlMessages';\r\nimport ReactCodeInput from 'react-code-input';\r\nimport './AuthWrapper.style.less';\r\nimport {useNavigate, useLocation} from 'react-router-dom';\r\nimport {fetchError} from '../../redux/actions';\r\nimport {useIntl} from 'react-intl';\r\nimport AppPageMetadata from '../../@crema/core/AppPageMetadata';\r\nimport AuthWrapper from './AuthWrapper';\r\nimport {useAuthMethod} from '../../@crema/utility/AuthHooks';\r\n\r\nconst ConfirmSignupAwsCognito = () => {\r\n  const {confirmCognitoUserSignup} = useAuthMethod();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const {messages} = useIntl();\r\n  const handleSubmit = () => {\r\n    const {email} = location.state || {};\r\n    if (email && pin.length === 6) {\r\n      confirmCognitoUserSignup(email, pin);\r\n    } else if (!email) {\r\n      navigate('/signup');\r\n      fetchError(messages['validation.tryAgain']);\r\n    } else {\r\n      fetchError(messages['validation.pinLength']);\r\n    }\r\n  };\r\n  const [pin, setPin] = useState('');\r\n\r\n  return (\r\n    <AuthWrapper>\r\n      <AppPageMetadata title='Confirm Signup' />\r\n\r\n      <div className='auth-recon-content'>\r\n        <div className='confirm-content'>\r\n          <p>\r\n            <IntlMessages id='common.verificationMessage' />\r\n          </p>\r\n        </div>\r\n\r\n        <div className='confirm-code-input'>\r\n          <ReactCodeInput\r\n            type='password'\r\n            value={pin}\r\n            fields={6}\r\n            onChange={(value) => setPin(value)}\r\n          />\r\n        </div>\r\n\r\n        <Button type='primary' className='confirm-btn' onClick={handleSubmit}>\r\n          <IntlMessages id='common.submit' />\r\n        </Button>\r\n      </div>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default ConfirmSignupAwsCognito;\r\n"]},"metadata":{},"sourceType":"module"}