{"ast":null,"code":"var _jsxFileName = \"/Users/mamata/Sites/Erptech/react-admin-poc/src/@crema/utility/AppContextProvider/SidebarContextProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState } from 'react';\nimport defaultConfig from './defaultConfig';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SidebarContext = /*#__PURE__*/createContext();\nconst SidebarActionsContext = /*#__PURE__*/createContext();\nexport const useSidebarContext = () => {\n  _s();\n\n  return useContext(SidebarContext);\n};\n\n_s(useSidebarContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const useSidebarActionsContext = () => {\n  _s2();\n\n  return useContext(SidebarActionsContext);\n};\n\n_s2(useSidebarActionsContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nconst SidebarContextProvider = ({\n  children\n}) => {\n  _s3();\n\n  const [menuStyle, updateMenuStyle] = useState(defaultConfig.sidebar.menuStyle);\n  const [sidebarColorSet, updateSidebarColorSet] = useState(defaultConfig.sidebar.colorSet);\n  const [isSidebarBgImage, setSidebarBgImage] = useState(defaultConfig.sidebar.isSidebarBgImage);\n  const [sidebarBgImage, updateSidebarBgImage] = useState(defaultConfig.sidebar.sidebarBgImage);\n  const [sidebarMenuSelectedColor, updateSidebarMenuSelectedColor] = useState(defaultConfig.sidebar.sidebarMenuSelectedColor);\n  return /*#__PURE__*/_jsxDEV(SidebarContext.Provider, {\n    value: {\n      menuStyle,\n      sidebarColorSet,\n      isSidebarBgImage,\n      sidebarBgImage,\n      sidebarMenuSelectedColor\n    },\n    children: /*#__PURE__*/_jsxDEV(SidebarActionsContext.Provider, {\n      value: {\n        updateMenuStyle,\n        updateSidebarColorSet,\n        setSidebarBgImage,\n        updateSidebarBgImage,\n        updateSidebarMenuSelectedColor\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(SidebarContextProvider, \"LlM9MpevfGLj6UZn1E3NBfeh+e0=\");\n\n_c = SidebarContextProvider;\nexport default SidebarContextProvider;\nSidebarContextProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarContextProvider\");","map":{"version":3,"sources":["/Users/mamata/Sites/Erptech/react-admin-poc/src/@crema/utility/AppContextProvider/SidebarContextProvider.js"],"names":["React","createContext","useContext","useState","defaultConfig","PropTypes","SidebarContext","SidebarActionsContext","useSidebarContext","useSidebarActionsContext","SidebarContextProvider","children","menuStyle","updateMenuStyle","sidebar","sidebarColorSet","updateSidebarColorSet","colorSet","isSidebarBgImage","setSidebarBgImage","sidebarBgImage","updateSidebarBgImage","sidebarMenuSelectedColor","updateSidebarMenuSelectedColor","propTypes","node","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,EAA0CC,QAA1C,QAAyD,OAAzD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,cAAc,gBAAGL,aAAa,EAApC;AACA,MAAMM,qBAAqB,gBAAGN,aAAa,EAA3C;AAEA,OAAO,MAAMO,iBAAiB,GAAG;AAAA;;AAAA,SAAMN,UAAU,CAACI,cAAD,CAAhB;AAAA,CAA1B;;GAAME,iB;;AAEb,OAAO,MAAMC,wBAAwB,GAAG;AAAA;;AAAA,SAAMP,UAAU,CAACK,qBAAD,CAAhB;AAAA,CAAjC;;IAAME,wB;;AAEb,MAAMC,sBAAsB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAC7C,QAAM,CAACC,SAAD,EAAYC,eAAZ,IAA+BV,QAAQ,CAC3CC,aAAa,CAACU,OAAd,CAAsBF,SADqB,CAA7C;AAGA,QAAM,CAACG,eAAD,EAAkBC,qBAAlB,IAA2Cb,QAAQ,CACvDC,aAAa,CAACU,OAAd,CAAsBG,QADiC,CAAzD;AAGA,QAAM,CAACC,gBAAD,EAAmBC,iBAAnB,IAAwChB,QAAQ,CACpDC,aAAa,CAACU,OAAd,CAAsBI,gBAD8B,CAAtD;AAGA,QAAM,CAACE,cAAD,EAAiBC,oBAAjB,IAAyClB,QAAQ,CACrDC,aAAa,CAACU,OAAd,CAAsBM,cAD+B,CAAvD;AAGA,QAAM,CAACE,wBAAD,EAA2BC,8BAA3B,IAA6DpB,QAAQ,CACzEC,aAAa,CAACU,OAAd,CAAsBQ,wBADmD,CAA3E;AAIA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLV,MAAAA,SADK;AAELG,MAAAA,eAFK;AAGLG,MAAAA,gBAHK;AAILE,MAAAA,cAJK;AAKLE,MAAAA;AALK,KADT;AAAA,2BAQE,QAAC,qBAAD,CAAuB,QAAvB;AACE,MAAA,KAAK,EAAE;AACLT,QAAAA,eADK;AAELG,QAAAA,qBAFK;AAGLG,QAAAA,iBAHK;AAILE,QAAAA,oBAJK;AAKLE,QAAAA;AALK,OADT;AAAA,gBAQGZ;AARH;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAtCD;;IAAMD,sB;;KAAAA,sB;AAwCN,eAAeA,sBAAf;AAEAA,sBAAsB,CAACc,SAAvB,GAAmC;AACjCb,EAAAA,QAAQ,EAAEN,SAAS,CAACoB,IAAV,CAAeC;AADQ,CAAnC","sourcesContent":["import React, {createContext, useContext, useState} from 'react';\r\nimport defaultConfig from './defaultConfig';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SidebarContext = createContext();\r\nconst SidebarActionsContext = createContext();\r\n\r\nexport const useSidebarContext = () => useContext(SidebarContext);\r\n\r\nexport const useSidebarActionsContext = () => useContext(SidebarActionsContext);\r\n\r\nconst SidebarContextProvider = ({children}) => {\r\n  const [menuStyle, updateMenuStyle] = useState(\r\n    defaultConfig.sidebar.menuStyle,\r\n  );\r\n  const [sidebarColorSet, updateSidebarColorSet] = useState(\r\n    defaultConfig.sidebar.colorSet,\r\n  );\r\n  const [isSidebarBgImage, setSidebarBgImage] = useState(\r\n    defaultConfig.sidebar.isSidebarBgImage,\r\n  );\r\n  const [sidebarBgImage, updateSidebarBgImage] = useState(\r\n    defaultConfig.sidebar.sidebarBgImage,\r\n  );\r\n  const [sidebarMenuSelectedColor, updateSidebarMenuSelectedColor] = useState(\r\n    defaultConfig.sidebar.sidebarMenuSelectedColor,\r\n  );\r\n\r\n  return (\r\n    <SidebarContext.Provider\r\n      value={{\r\n        menuStyle,\r\n        sidebarColorSet,\r\n        isSidebarBgImage,\r\n        sidebarBgImage,\r\n        sidebarMenuSelectedColor,\r\n      }}>\r\n      <SidebarActionsContext.Provider\r\n        value={{\r\n          updateMenuStyle,\r\n          updateSidebarColorSet,\r\n          setSidebarBgImage,\r\n          updateSidebarBgImage,\r\n          updateSidebarMenuSelectedColor,\r\n        }}>\r\n        {children}\r\n      </SidebarActionsContext.Provider>\r\n    </SidebarContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SidebarContextProvider;\r\n\r\nSidebarContextProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}