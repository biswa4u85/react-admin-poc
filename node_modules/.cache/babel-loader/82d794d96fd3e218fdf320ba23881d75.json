{"ast":null,"code":"var _jsxFileName = \"/Users/mamata/Sites/Erptech/react-admin-poc/src/pages/dashboard/Analytics/OrderNTransaction/TransactionTable/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AppTableContainer from '../../../../../@crema/core/AppTableContainer';\nimport '../index.style.less';\nimport AppMenu from '../../../../../@crema/core/AppMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TransactionTable = ({\n  transactionData\n}) => {\n  const getPaymentTypeColor = paymentType => {\n    switch (paymentType) {\n      case 'COD':\n        {\n          return '#F84E4E';\n        }\n\n      case 'Prepaid':\n        {\n          return '#43C888';\n        }\n\n      default:\n        {\n          return '#E2A72E';\n        }\n    }\n  };\n\n  const getPaymentStatusColor = status => {\n    switch (status) {\n      case 'In Transit':\n        {\n          return '#F84E4E';\n        }\n\n      case 'Delivered':\n        {\n          return '#43C888';\n        }\n\n      default:\n        {\n          return '#E2A72E';\n        }\n    }\n  };\n\n  const columns = [{\n    title: 'OrderID',\n    dataIndex: 'id',\n    key: 'id',\n    render: id => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"order-id\",\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }, this)\n  }, {\n    title: 'Customer',\n    dataIndex: 'customer',\n    key: 'customer'\n  }, {\n    title: 'Order Date',\n    dataIndex: 'date',\n    key: 'date'\n  }, {\n    title: 'Payment',\n    dataIndex: 'paymentType',\n    key: 'paymentType',\n    render: paymentType => /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: getPaymentTypeColor(paymentType)\n      },\n      children: paymentType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: 'Status',\n    dataIndex: 'status',\n    key: 'status',\n    render: status => /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: getPaymentStatusColor(status),\n        backgroundColor: getPaymentStatusColor(status) + '44'\n      },\n      className: \"badge\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: '',\n    dataIndex: 'more',\n    key: 'more',\n    className: 'order-transaction-table-more',\n    render: () => /*#__PURE__*/_jsxDEV(AppMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(AppTableContainer, {\n    className: \"order-transaction-table\",\n    hoverColor: true,\n    data: transactionData,\n    columns: columns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TransactionTable;\nexport default TransactionTable;\nTransactionTable.defaultProps = {\n  transactionData: []\n};\nTransactionTable.propTypes = {\n  transactionData: PropTypes.array\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionTable\");","map":{"version":3,"sources":["/Users/mamata/Sites/Erptech/react-admin-poc/src/pages/dashboard/Analytics/OrderNTransaction/TransactionTable/index.js"],"names":["React","PropTypes","AppTableContainer","AppMenu","TransactionTable","transactionData","getPaymentTypeColor","paymentType","getPaymentStatusColor","status","columns","title","dataIndex","key","render","id","color","backgroundColor","className","defaultProps","propTypes","array"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppTableContainer from '../../../../../@crema/core/AppTableContainer';\r\nimport '../index.style.less';\r\nimport AppMenu from '../../../../../@crema/core/AppMenu';\r\n\r\nconst TransactionTable = ({transactionData}) => {\r\n  const getPaymentTypeColor = (paymentType) => {\r\n    switch (paymentType) {\r\n      case 'COD': {\r\n        return '#F84E4E';\r\n      }\r\n      case 'Prepaid': {\r\n        return '#43C888';\r\n      }\r\n      default: {\r\n        return '#E2A72E';\r\n      }\r\n    }\r\n  };\r\n  const getPaymentStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'In Transit': {\r\n        return '#F84E4E';\r\n      }\r\n      case 'Delivered': {\r\n        return '#43C888';\r\n      }\r\n      default: {\r\n        return '#E2A72E';\r\n      }\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'OrderID',\r\n      dataIndex: 'id',\r\n      key: 'id',\r\n      render: (id) => <span className='order-id'>{id}</span>,\r\n    },\r\n    {\r\n      title: 'Customer',\r\n      dataIndex: 'customer',\r\n      key: 'customer',\r\n    },\r\n    {\r\n      title: 'Order Date',\r\n      dataIndex: 'date',\r\n      key: 'date',\r\n    },\r\n    {\r\n      title: 'Payment',\r\n      dataIndex: 'paymentType',\r\n      key: 'paymentType',\r\n      render: (paymentType) => (\r\n        <span\r\n          style={{\r\n            color: getPaymentTypeColor(paymentType),\r\n          }}>\r\n          {paymentType}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      render: (status) => (\r\n        <span\r\n          style={{\r\n            color: getPaymentStatusColor(status),\r\n            backgroundColor: getPaymentStatusColor(status) + '44',\r\n          }}\r\n          className='badge'>\r\n          {status}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: '',\r\n      dataIndex: 'more',\r\n      key: 'more',\r\n      className: 'order-transaction-table-more',\r\n      render: () => <AppMenu />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <AppTableContainer\r\n      className='order-transaction-table'\r\n      hoverColor\r\n      data={transactionData}\r\n      columns={columns}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TransactionTable;\r\n\r\nTransactionTable.defaultProps = {\r\n  transactionData: [],\r\n};\r\n\r\nTransactionTable.propTypes = {\r\n  transactionData: PropTypes.array,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}