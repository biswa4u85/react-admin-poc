{"ast":null,"code":"var _jsxFileName = \"/Users/mamata/Sites/Erptech/react-admin-poc/src/@crema/utility/VerticalMenuUtils.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { Link, useLocation } from 'react-router-dom';\nimport { Menu } from 'antd';\nimport React from 'react';\nimport routesConfig from '../../pages/routeConfig';\nimport { useIntl } from 'react-intl';\nimport { useSidebarContext } from './AppContextProvider/SidebarContextProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction getStyles(item, sidebarColorSet, isSidebarBgImage, index, isGroup) {\n  _s();\n\n  const {\n    pathname\n  } = useLocation();\n  const selectedKeys = pathname.substr(1);\n  const defaultOpenKeys = selectedKeys.split('/');\n\n  if (index === 0 || isGroup) {\n    return {\n      color: sidebarColorSet.sidebarTextColor,\n      backgroundColor: isSidebarBgImage ? '' : sidebarColorSet.sidebarBgColor\n    };\n  } else {\n    const isActive = defaultOpenKeys[index] === item.id;\n    return {\n      color: isActive ? sidebarColorSet.sidebarMenuSelectedTextColor : sidebarColorSet.sidebarTextColor,\n      backgroundColor: isActive ? sidebarColorSet.sidebarMenuSelectedBgColor : isSidebarBgImage ? '' : sidebarColorSet.sidebarBgColor\n    };\n  }\n}\n\n_s(getStyles, \"DLzm74WbLrqXx5fm3m0DPqqQIzo=\", false, function () {\n  return [useLocation];\n});\n\nconst renderMenuItemChildren = item => {\n  _s2();\n\n  const {\n    icon,\n    messageId,\n    path\n  } = item;\n  const {\n    messages\n  } = useIntl();\n  if (path && path.includes('/')) return /*#__PURE__*/_jsxDEV(Link, {\n    to: path,\n    children: [icon && ( /*#__PURE__*/React.isValidElement(icon) ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"ant-menu-item-icon\",\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"icon\", {\n      className: \"ant-menu-item-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n      \"data-testid\": messageId.toLowerCase + '-nav',\n      children: messages[messageId]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [icon && ( /*#__PURE__*/React.isValidElement(icon) ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ant-menu-item-icon\",\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"icon\", {\n        className: \"ant-menu-item-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n        \"data-testid\": messageId.toLowerCase + '-nav',\n        children: messages[messageId]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s2(renderMenuItemChildren, \"jEx4wrzqey4lWjRZEOp2SbNhCqQ=\", false, function () {\n  return [useIntl];\n});\n\nconst renderMenuItem = (item, sidebarColorSet, isSidebarBgImage, index) => {\n  return item.type === 'collapse' ? /*#__PURE__*/_jsxDEV(Menu.SubMenu, {\n    style: getStyles(item, sidebarColorSet, isSidebarBgImage, index, true),\n    title: renderMenuItemChildren(item, sidebarColorSet, isSidebarBgImage),\n    children: item.children.map(item => renderMenuItem(item, sidebarColorSet, isSidebarBgImage, index + 1))\n  }, item.path ? item.path : item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Menu.Item, {\n    style: getStyles(item, sidebarColorSet, isSidebarBgImage, index),\n    children: item.children ? item.children : renderMenuItemChildren(item, sidebarColorSet, isSidebarBgImage)\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\nconst renderMenu = (item, sidebarColorSet, isSidebarBgImage, index) => {\n  return item.type === 'group' ? /*#__PURE__*/_jsxDEV(Menu.ItemGroup, {\n    style: getStyles(item, sidebarColorSet, isSidebarBgImage, index, true),\n    title: renderMenuItemChildren(item, sidebarColorSet, isSidebarBgImage),\n    children: item.children.map(item => renderMenuItem(item, sidebarColorSet, isSidebarBgImage, index + 1))\n  }, item.path ? item.path : item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Menu.Item, {\n    exact: item.exact,\n    style: getStyles(item, sidebarColorSet, isSidebarBgImage, index),\n    children: item.children ? item.children : renderMenuItemChildren(item, sidebarColorSet, isSidebarBgImage, index)\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getRouteMenus = () => {\n  _s3();\n\n  const {\n    sidebarColorSet\n  } = useSidebarContext();\n  const {\n    isSidebarBgImage\n  } = useSidebarContext();\n  return routesConfig.map(route => renderMenu(route, sidebarColorSet, isSidebarBgImage, 0));\n};\n\n_s3(getRouteMenus, \"LlDxehH+9AN1k/uJtLXuxgdw89Y=\", false, function () {\n  return [useSidebarContext, useSidebarContext];\n});","map":{"version":3,"sources":["/Users/mamata/Sites/Erptech/react-admin-poc/src/@crema/utility/VerticalMenuUtils.js"],"names":["Link","useLocation","Menu","React","routesConfig","useIntl","useSidebarContext","getStyles","item","sidebarColorSet","isSidebarBgImage","index","isGroup","pathname","selectedKeys","substr","defaultOpenKeys","split","color","sidebarTextColor","backgroundColor","sidebarBgColor","isActive","id","sidebarMenuSelectedTextColor","sidebarMenuSelectedBgColor","renderMenuItemChildren","icon","messageId","path","messages","includes","isValidElement","toLowerCase","renderMenuItem","type","children","map","renderMenu","exact","getRouteMenus","route"],"mappings":"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","sourcesContent":["import {Link, useLocation} from 'react-router-dom';\r\nimport {Menu} from 'antd';\r\nimport React from 'react';\r\nimport routesConfig from '../../pages/routeConfig';\r\nimport {useIntl} from 'react-intl';\r\nimport {useSidebarContext} from './AppContextProvider/SidebarContextProvider';\r\n\r\nfunction getStyles(item, sidebarColorSet, isSidebarBgImage, index, isGroup) {\r\n  const {pathname} = useLocation();\r\n  const selectedKeys = pathname.substr(1);\r\n  const defaultOpenKeys = selectedKeys.split('/');\r\n\r\n  if (index === 0 || isGroup) {\r\n    return {\r\n      color: sidebarColorSet.sidebarTextColor,\r\n      backgroundColor: isSidebarBgImage ? '' : sidebarColorSet.sidebarBgColor,\r\n    };\r\n  } else {\r\n    const isActive = defaultOpenKeys[index] === item.id;\r\n\r\n    return {\r\n      color: isActive\r\n        ? sidebarColorSet.sidebarMenuSelectedTextColor\r\n        : sidebarColorSet.sidebarTextColor,\r\n      backgroundColor: isActive\r\n        ? sidebarColorSet.sidebarMenuSelectedBgColor\r\n        : isSidebarBgImage\r\n        ? ''\r\n        : sidebarColorSet.sidebarBgColor,\r\n    };\r\n  }\r\n}\r\n\r\nconst renderMenuItemChildren = (item) => {\r\n  const {icon, messageId, path} = item;\r\n  const {messages} = useIntl();\r\n\r\n  if (path && path.includes('/'))\r\n    return (\r\n      <Link to={path}>\r\n        {icon &&\r\n          (React.isValidElement(icon) ? (\r\n            <span className='ant-menu-item-icon'>{icon}</span>\r\n          ) : (\r\n            <icon className='ant-menu-item-icon' />\r\n          ))}\r\n        <span data-testid={messageId.toLowerCase + '-nav'}>\r\n          {messages[messageId]}\r\n        </span>\r\n      </Link>\r\n    );\r\n  else {\r\n    return (\r\n      <>\r\n        {icon &&\r\n          (React.isValidElement(icon) ? (\r\n            <span className='ant-menu-item-icon'>{icon}</span>\r\n          ) : (\r\n            <icon className='ant-menu-item-icon' />\r\n          ))}\r\n        <span data-testid={messageId.toLowerCase + '-nav'}>\r\n          {messages[messageId]}\r\n        </span>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nconst renderMenuItem = (item, sidebarColorSet, isSidebarBgImage, index) => {\r\n  return item.type === 'collapse' ? (\r\n    <Menu.SubMenu\r\n      style={getStyles(item, sidebarColorSet, isSidebarBgImage, index, true)}\r\n      key={item.path ? item.path : item.id}\r\n      title={renderMenuItemChildren(item, sidebarColorSet, isSidebarBgImage)}>\r\n      {item.children.map((item) =>\r\n        renderMenuItem(item, sidebarColorSet, isSidebarBgImage, index + 1),\r\n      )}\r\n    </Menu.SubMenu>\r\n  ) : (\r\n    <Menu.Item\r\n      key={item.id}\r\n      style={getStyles(item, sidebarColorSet, isSidebarBgImage, index)}>\r\n      {item.children\r\n        ? item.children\r\n        : renderMenuItemChildren(item, sidebarColorSet, isSidebarBgImage)}\r\n    </Menu.Item>\r\n  );\r\n};\r\n\r\nconst renderMenu = (item, sidebarColorSet, isSidebarBgImage, index) => {\r\n  return item.type === 'group' ? (\r\n    <Menu.ItemGroup\r\n      style={getStyles(item, sidebarColorSet, isSidebarBgImage, index, true)}\r\n      key={item.path ? item.path : item.id}\r\n      title={renderMenuItemChildren(item, sidebarColorSet, isSidebarBgImage)}>\r\n      {item.children.map((item) =>\r\n        renderMenuItem(item, sidebarColorSet, isSidebarBgImage, index + 1),\r\n      )}\r\n    </Menu.ItemGroup>\r\n  ) : (\r\n    <Menu.Item\r\n      key={item.id}\r\n      exact={item.exact}\r\n      style={getStyles(item, sidebarColorSet, isSidebarBgImage, index)}>\r\n      {item.children\r\n        ? item.children\r\n        : renderMenuItemChildren(\r\n            item,\r\n            sidebarColorSet,\r\n            isSidebarBgImage,\r\n            index,\r\n          )}\r\n    </Menu.Item>\r\n  );\r\n};\r\n\r\nexport const getRouteMenus = () => {\r\n  const {sidebarColorSet} = useSidebarContext();\r\n  const {isSidebarBgImage} = useSidebarContext();\r\n  return routesConfig.map((route) =>\r\n    renderMenu(route, sidebarColorSet, isSidebarBgImage, 0),\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}