{"ast":null,"code":"var _jsxFileName = \"/Users/sunita/Sites/Erptech/its-Disco/src/@crema/core/AppLayout/components/UserInfo/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { Avatar, Dropdown, List } from 'antd';\nimport { FaChevronDown } from 'react-icons/fa';\nimport './index.style.less';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useThemeContext } from '../../../../utility/AppContextProvider/ThemeContextProvider';\nimport { useSidebarContext } from '../../../../utility/AppContextProvider/SidebarContextProvider';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../../../../store/AuthRedux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserInfo = ({\n  hasColor\n}) => {\n  _s();\n\n  const {\n    themeMode\n  } = useThemeContext();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.auth.user);\n  const navigate = useNavigate();\n  const {\n    sidebarColorSet\n  } = useSidebarContext();\n  const {\n    isSidebarBgImage\n  } = useSidebarContext();\n\n  const getUserAvatar = () => {\n    if (user === null || user === void 0 ? void 0 : user.displayName) {\n      return user === null || user === void 0 ? void 0 : user.displayName.charAt(0).toUpperCase();\n    }\n\n    if (user === null || user === void 0 ? void 0 : user.email) {\n      return user === null || user === void 0 ? void 0 : user.email.charAt(0).toUpperCase();\n    }\n  };\n\n  const menu = /*#__PURE__*/_jsxDEV(List, {\n    className: \"dropdown-list\",\n    children: [/*#__PURE__*/_jsxDEV(List.Item, {\n      onClick: () => navigate('/my-profile'),\n      children: \"My Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n      onClick: () => dispatch(logout()),\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: hasColor ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: isSidebarBgImage ? '' : sidebarColorSet.sidebarHeaderColor,\n        color: sidebarColorSet.sidebarTextColor\n      },\n      className: clsx('cr-user-info cr-user-info-hasColor', {\n        light: themeMode === 'light'\n      }),\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        className: \"user-profile-dropdown\",\n        overlay: menu,\n        trigger: ['click'],\n        placement: \"bottomRight\",\n        overlayStyle: {\n          zIndex: 1052,\n          minWidth: 150\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"cr-user-info-inner ant-dropdown-link\",\n          children: [(user === null || user === void 0 ? void 0 : user.photoURL) ? /*#__PURE__*/_jsxDEV(Avatar, {\n            className: \"cr-user-info-avatar\",\n            src: user === null || user === void 0 ? void 0 : user.photoURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n            className: \"cr-user-info-avatar\",\n            children: getUserAvatar()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"cr-user-info-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"cr-user-name-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: clsx('cr-user-name text-truncate', {\n                  light: themeMode === 'light'\n                }),\n                children: (user === null || user === void 0 ? void 0 : user.displayName) ? user === null || user === void 0 ? void 0 : user.displayName : 'admin user '\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"cr-user-arrow\",\n                children: /*#__PURE__*/_jsxDEV(FaChevronDown, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"cr-user-designation text-truncate\",\n              children: \"System Manager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx('cr-user-info', {\n        light: themeMode === 'light'\n      }),\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        className: \"user-profile-dropdown\",\n        overlay: menu,\n        trigger: ['click'],\n        placement: \"bottomRight\",\n        overlayStyle: {\n          zIndex: 1052,\n          minWidth: 150\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"cr-user-info-inner ant-dropdown-link\",\n          children: [(user === null || user === void 0 ? void 0 : user.photoURL) ? /*#__PURE__*/_jsxDEV(Avatar, {\n            className: \"cr-user-info-avatar\",\n            src: user.photoURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n            className: \"cr-user-info-avatar\",\n            children: getUserAvatar()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"cr-user-info-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"cr-user-name-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: clsx('cr-user-name text-truncate', {\n                  light: themeMode === 'light'\n                }),\n                children: (user === null || user === void 0 ? void 0 : user.displayName) ? user === null || user === void 0 ? void 0 : user.displayName : 'admin user '\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"cr-user-arrow\",\n                children: /*#__PURE__*/_jsxDEV(FaChevronDown, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"cr-user-designation text-truncate\",\n              children: \"System Manager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserInfo, \"EgtMuGR5X3Ro7m8ncgKaZdKKNJQ=\", false, function () {\n  return [useThemeContext, useDispatch, useSelector, useNavigate, useSidebarContext, useSidebarContext];\n});\n\n_c = UserInfo;\nexport default UserInfo;\nUserInfo.propTypes = {\n  hasColor: PropTypes.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"sources":["/Users/sunita/Sites/Erptech/its-Disco/src/@crema/core/AppLayout/components/UserInfo/index.js"],"names":["React","useNavigate","clsx","Avatar","Dropdown","List","FaChevronDown","useSelector","useDispatch","useThemeContext","useSidebarContext","PropTypes","logout","UserInfo","hasColor","themeMode","dispatch","user","state","auth","navigate","sidebarColorSet","isSidebarBgImage","getUserAvatar","displayName","charAt","toUpperCase","email","menu","backgroundColor","sidebarHeaderColor","color","sidebarTextColor","light","zIndex","minWidth","photoURL","propTypes","bool"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { Avatar, Dropdown, List } from 'antd';\r\nimport { FaChevronDown } from 'react-icons/fa';\r\nimport './index.style.less';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useThemeContext } from '../../../../utility/AppContextProvider/ThemeContextProvider';\r\nimport { useSidebarContext } from '../../../../utility/AppContextProvider/SidebarContextProvider';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../../../../store/AuthRedux'\r\n\r\nconst UserInfo = ({ hasColor }) => {\r\n  const { themeMode } = useThemeContext();\r\n  const dispatch = useDispatch()\r\n  const user = useSelector((state) => state.auth.user)\r\n  const navigate = useNavigate();\r\n  const { sidebarColorSet } = useSidebarContext();\r\n  const { isSidebarBgImage } = useSidebarContext();\r\n\r\n  const getUserAvatar = () => {\r\n    if (user?.displayName) {\r\n      return user?.displayName.charAt(0).toUpperCase();\r\n    }\r\n    if (user?.email) {\r\n      return user?.email.charAt(0).toUpperCase();\r\n    }\r\n  };\r\n\r\n  const menu = (\r\n    <List className='dropdown-list'>\r\n      <List.Item onClick={() => navigate('/my-profile')}>My Profile</List.Item>\r\n      <List.Item onClick={() => dispatch(logout())}>Logout</List.Item>\r\n    </List>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {hasColor ? (\r\n        <div\r\n          style={{\r\n            backgroundColor: isSidebarBgImage\r\n              ? ''\r\n              : sidebarColorSet.sidebarHeaderColor,\r\n            color: sidebarColorSet.sidebarTextColor,\r\n          }}\r\n          className={clsx('cr-user-info cr-user-info-hasColor', {\r\n            light: themeMode === 'light',\r\n          })}>\r\n          <Dropdown\r\n            className='user-profile-dropdown'\r\n            overlay={menu}\r\n            trigger={['click']}\r\n            placement='bottomRight'\r\n            overlayStyle={{\r\n              zIndex: 1052,\r\n              minWidth: 150,\r\n            }}>\r\n            <a className='cr-user-info-inner ant-dropdown-link'>\r\n              {user?.photoURL ? (\r\n                <Avatar className='cr-user-info-avatar' src={user?.photoURL} />\r\n              ) : (\r\n                <Avatar className='cr-user-info-avatar'>\r\n                  {getUserAvatar()}\r\n                </Avatar>\r\n              )}\r\n              <span className='cr-user-info-content'>\r\n                <span className='cr-user-name-info'>\r\n                  <h3\r\n                    className={clsx('cr-user-name text-truncate', {\r\n                      light: themeMode === 'light',\r\n                    })}>\r\n                    {user?.displayName ? user?.displayName : 'admin user '}\r\n                  </h3>\r\n                  <span className='cr-user-arrow'>\r\n                    <FaChevronDown />\r\n                  </span>\r\n                </span>\r\n                <span className='cr-user-designation text-truncate'>\r\n                  System Manager\r\n                </span>\r\n              </span>\r\n            </a>\r\n          </Dropdown>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className={clsx('cr-user-info', {\r\n            light: themeMode === 'light',\r\n          })}>\r\n          <Dropdown\r\n            className='user-profile-dropdown'\r\n            overlay={menu}\r\n            trigger={['click']}\r\n            placement='bottomRight'\r\n            overlayStyle={{\r\n              zIndex: 1052,\r\n              minWidth: 150,\r\n            }}>\r\n            <a className='cr-user-info-inner ant-dropdown-link'>\r\n              {user?.photoURL ? (\r\n                <Avatar className='cr-user-info-avatar' src={user.photoURL} />\r\n              ) : (\r\n                <Avatar className='cr-user-info-avatar'>\r\n                  {getUserAvatar()}\r\n                </Avatar>\r\n              )}\r\n              <span className='cr-user-info-content'>\r\n                <span className='cr-user-name-info'>\r\n                  <h3\r\n                    className={clsx('cr-user-name text-truncate', {\r\n                      light: themeMode === 'light',\r\n                    })}>\r\n                    {user?.displayName ? user?.displayName : 'admin user '}\r\n                  </h3>\r\n                  <span className='cr-user-arrow'>\r\n                    <FaChevronDown />\r\n                  </span>\r\n                </span>\r\n                <span className='cr-user-designation text-truncate'>\r\n                  System Manager\r\n                </span>\r\n              </span>\r\n            </a>\r\n          </Dropdown>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n\r\nUserInfo.propTypes = {\r\n  hasColor: PropTypes.bool,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}