{"ast":null,"code":"import Config from \"../common/Config\";\nimport axios from 'axios';\nconst axiosAPI = axios.create({\n  baseURL: Config.apiBaseUrl,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport function apiPostCall(path, params) {\n  let headers = {};\n\n  if (params.token) {\n    headers.Authorization = params.token;\n  }\n\n  if (params.razorPaySignature) {\n    headers[\"x-razorpay-signature\"] = params.razorPaySignature;\n  }\n\n  delete params.token;\n  delete params.razorPaySignature;\n  return axiosAPI.post(path, params, {\n    headers: headers\n  }).then(response => {\n    return response;\n  }).catch(error => {\n    if (error.response) {\n      return error.response;\n    } else if (error.request) {\n      return error.request;\n    } else {\n      return error.message;\n    }\n  });\n}\nexport function apiPutCall(path, params) {\n  let token = params.token;\n  delete params.token;\n  return axiosAPI.put(path, params, {\n    headers: {\n      'Authorization': token\n    }\n  }).then(response => {\n    return response;\n  }).catch(error => {\n    if (error.response) {\n      return error.response;\n    } else if (error.request) {\n      return error.request;\n    } else {\n      return error.message;\n    }\n  });\n}\nexport function apiGetCall(path, params) {\n  let token = params.token;\n  delete params.token;\n  let newUrl = `${path}?`;\n\n  for (const key of Object.keys(params)) {\n    if (params[key]) {\n      newUrl += `${key}=${params[key]}&`;\n    }\n  }\n\n  return axiosAPI.get(newUrl, {\n    headers: {\n      'Authorization': token\n    }\n  }).then(response => {\n    return response;\n  }).catch(error => {\n    if (error.response) {\n      return error.response;\n    } else if (error.request) {\n      return error.request;\n    } else {\n      return error.message;\n    }\n  });\n}\nexport function apiDeleteCall(path, params) {\n  let token = params.token;\n  delete params.token;\n  return axiosAPI.delete(path, {\n    headers: {\n      'Authorization': token\n    }\n  }).then(response => {\n    return response;\n  }).catch(error => {\n    if (error.response) {\n      return error.response;\n    } else if (error.request) {\n      return error.request;\n    } else {\n      return error.message;\n    }\n  });\n}\nexport function uploadImgApi(file, token) {\n  const data = new FormData();\n  data.append('files', file);\n  return fetch(`${Config.apiBaseUrl}/file/upload`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      authorization: token\n    },\n    body: data\n  }).then(response => response.json()).then(responseJson => {\n    if (responseJson) {\n      return `${responseJson.data[0].url}`;\n    }\n\n    return null;\n  }).catch(error => {\n    return error;\n  });\n}","map":{"version":3,"sources":["/Users/sunita/Sites/Erptech/its-Disco/src/utility/site-apis.js"],"names":["Config","axios","axiosAPI","create","baseURL","apiBaseUrl","headers","apiPostCall","path","params","token","Authorization","razorPaySignature","post","then","response","catch","error","request","message","apiPutCall","put","apiGetCall","newUrl","key","Object","keys","get","apiDeleteCall","delete","uploadImgApi","file","data","FormData","append","fetch","method","Accept","authorization","body","json","responseJson","url"],"mappings":"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","sourcesContent":["import Config from \"../common/Config\";\r\nimport axios from 'axios';\r\n\r\nconst axiosAPI = axios.create({\r\n  baseURL: Config.apiBaseUrl,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n});\r\n\r\nexport function apiPostCall(path, params) {\r\n  let headers = {}\r\n  if (params.token) {\r\n    headers.Authorization = params.token\r\n  }\r\n  if (params.razorPaySignature) {\r\n    headers[\"x-razorpay-signature\"] = params.razorPaySignature\r\n  }\r\n  delete params.token\r\n  delete params.razorPaySignature\r\n  return axiosAPI.post(path, params, { headers: headers })\r\n    .then((response) => {\r\n      return response\r\n    })\r\n    .catch((error) => {\r\n      if (error.response) {\r\n        return error.response\r\n      } else if (error.request) {\r\n        return error.request\r\n      } else {\r\n        return error.message\r\n      }\r\n    });\r\n}\r\n\r\nexport function apiPutCall(path, params) {\r\n  let token = params.token\r\n  delete params.token\r\n  return axiosAPI.put(path, params, { headers: { 'Authorization': token } })\r\n    .then((response) => {\r\n      return response\r\n    })\r\n    .catch((error) => {\r\n      if (error.response) {\r\n        return error.response\r\n      } else if (error.request) {\r\n        return error.request\r\n      } else {\r\n        return error.message\r\n      }\r\n    });\r\n}\r\n\r\nexport function apiGetCall(path, params) {\r\n  let token = params.token\r\n  delete params.token\r\n  let newUrl = `${path}?`\r\n  for (const key of Object.keys(params)) {\r\n    if (params[key]) {\r\n      newUrl += `${key}=${params[key]}&`\r\n    }\r\n  }\r\n  return axiosAPI.get(newUrl, { headers: { 'Authorization': token } })\r\n    .then((response) => {\r\n      return response\r\n    })\r\n    .catch((error) => {\r\n      if (error.response) {\r\n        return error.response\r\n      } else if (error.request) {\r\n        return error.request\r\n      } else {\r\n        return error.message\r\n      }\r\n    });\r\n}\r\n\r\nexport function apiDeleteCall(path, params) {\r\n  let token = params.token\r\n  delete params.token\r\n  return axiosAPI.delete(path, { headers: { 'Authorization': token } })\r\n    .then((response) => {\r\n      return response\r\n    })\r\n    .catch((error) => {\r\n      if (error.response) {\r\n        return error.response\r\n      } else if (error.request) {\r\n        return error.request\r\n      } else {\r\n        return error.message\r\n      }\r\n    });\r\n}\r\n\r\nexport function uploadImgApi(file, token) {\r\n  const data = new FormData();\r\n  data.append('files', file);\r\n  return fetch(`${Config.apiBaseUrl}/file/upload`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      authorization: token,\r\n    },\r\n    body: data,\r\n  })\r\n    .then(response => response.json())\r\n    .then(responseJson => {\r\n      if (responseJson) {\r\n        return `${responseJson.data[0].url}`\r\n      }\r\n      return null\r\n    }).catch(error => {\r\n      return error;\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}