{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { apiPutCall, apiGetCall, apiPostCall } from '../utility/site-apis';\nimport { message } from 'antd';\nconst initialState = {\n  isFetching: false,\n  error: null,\n  Promo: [],\n  singlePromoDetails: {},\n  issuccess: false\n};\nexport const getPromo = createAsyncThunk('Promo/getPromo', async (params, {\n  rejectWithValue\n}) => {\n  const response = await apiGetCall(`/Promo`, params);\n\n  if (response.data.status === 'error') {\n    return rejectWithValue(response.data);\n  }\n\n  return response.data;\n});\nexport const addPromo = createAsyncThunk('Promo/addPromo', async (params, {\n  rejectWithValue\n}) => {\n  const response = await apiGetCall(`/Promo`, params);\n\n  if (response.data.status === 'error') {\n    return rejectWithValue(response.data);\n  }\n\n  return response.data;\n});\nexport const updatepromo = createAsyncThunk('Promo/updatepromo', async (params, {\n  rejectWithValue\n}) => {\n  const response = await apiPutCall(`/Promo/${params.id}`, params);\n\n  if (response.data.status === 'error') {\n    return rejectWithValue(response.data);\n  }\n\n  return response.data;\n});\nexport const deletpromo = createAsyncThunk('Promo/deletpromo', async (params, {\n  rejectWithValue\n}) => {\n  // console.log(params)\n  const response = await apiDeleteCall(`/Promo/${params.id}`, params);\n\n  if (response.data.status === 'error') {\n    return rejectWithValue(response.data);\n  }\n\n  return response.data;\n});\nexport const counterSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      state.user = null;\n      state.token = null;\n    }\n  },\n  extraReducers: {\n    // getPromo\n    [getPromo.pending]: (state, action) => {\n      state.isFetching = true;\n      state.error = null;\n      state.Promo = [];\n    },\n    [getPromo.rejected]: (state, action) => {\n      var _action$payload;\n\n      state.isFetching = false;\n      state.error = action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.message;\n    },\n    [getPromo.fulfilled]: (state, action) => {\n      state.isFetching = false;\n      state.error = null;\n      state.Promo = action.payload.data;\n    },\n    // addPromo\n    [addPromo.pending]: (state, action) => {\n      state.isFetching = true;\n      state.error = null;\n      state.issuccess = false;\n    },\n    [addPromo.rejected]: (state, action) => {\n      state.isFetching = false;\n      state.error = action.payload;\n    },\n    [addPromo.fulfilled]: (state, action) => {\n      state.isFetching = false;\n      state.error = null;\n      state.issuccess = true;\n    },\n    // updatepromo\n    [updatepromo.pending]: (state, action) => {\n      state.isFetching = true;\n      state.error = null;\n      state.issuccess = false;\n    },\n    [updatepromo.rejected]: (state, action) => {\n      // alert(action.payload);\n      state.isFetching = false;\n      state.error = action.payload;\n    },\n    [updatepromo.fulfilled]: (state, action) => {\n      state.isFetching = false;\n      state.error = null; // console.log(action.payload)\n\n      state.issuccess = true;\n    },\n    // deletpromo\n    [deletpromo.pending]: (state, action) => {\n      state.isFetching = true;\n      state.error = null;\n      state.issuccess = false;\n    },\n    [deletpromo.rejected]: (state, action) => {\n      state.isFetching = false;\n      state.error = action.payload;\n    },\n    [deletpromo.fulfilled]: (state, action) => {\n      state.isFetching = false;\n      state.error = null;\n      state.issuccess = true;\n    }\n  }\n});\nexport const {\n  logout\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"sources":["/Users/sunita/Sites/Erptech/its-Disco/src/store/PromoRedux.js"],"names":["createAsyncThunk","createSlice","apiPutCall","apiGetCall","apiPostCall","message","initialState","isFetching","error","Promo","singlePromoDetails","issuccess","getPromo","params","rejectWithValue","response","data","status","addPromo","updatepromo","id","deletpromo","apiDeleteCall","counterSlice","name","reducers","logout","state","user","token","extraReducers","pending","action","rejected","payload","fulfilled","actions","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { apiPutCall, apiGetCall, apiPostCall } from '../utility/site-apis'\nimport { message } from 'antd';\n\nconst initialState = {\n    isFetching: false,\n    error: null,\n    Promo: [],\n    singlePromoDetails: {},\n    issuccess: false,\n}\n\nexport const getPromo = createAsyncThunk(\n    'Promo/getPromo',\n    async (params, { rejectWithValue }) => {\n        const response = await apiGetCall(`/Promo`, params)\n        if (response.data.status === 'error') {\n            return rejectWithValue(response.data)\n        }\n        return response.data\n    }\n)\n\nexport const addPromo = createAsyncThunk(\n    'Promo/addPromo',\n    async (params, { rejectWithValue }) => {\n        const response = await apiGetCall(`/Promo`, params)\n        if (response.data.status === 'error') {\n            return rejectWithValue(response.data)\n        }\n        return response.data\n    }\n)\n\nexport const updatepromo = createAsyncThunk(\n    'Promo/updatepromo',\n    async (params, { rejectWithValue }) => {\n        const response = await apiPutCall(`/Promo/${params.id}`, params)\n        if (response.data.status === 'error') {\n            return rejectWithValue(response.data)\n        }\n        return response.data\n    }\n)\n\nexport const deletpromo = createAsyncThunk(\n    'Promo/deletpromo',\n    async (params, { rejectWithValue }) => {\n      // console.log(params)\n      const response = await apiDeleteCall(`/Promo/${params.id}`, params)\n      if (response.data.status === 'error') {\n        return rejectWithValue(response.data)\n      }\n      return response.data\n    }\n  )\n\nexport const counterSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        logout: (state) => {\n            state.user = null\n            state.token = null\n        },\n    },\n    extraReducers: {\n        // getPromo\n        [getPromo.pending]: (state, action) => {\n            state.isFetching = true\n            state.error = null\n            state.Promo = []\n        },\n        [getPromo.rejected]: (state, action) => {\n            state.isFetching = false\n            state.error = action?.payload?.message\n        },\n        [getPromo.fulfilled]: (state, action) => {\n            state.isFetching = false\n            state.error = null\n            state.Promo = action.payload.data\n        },\n        // addPromo\n        [addPromo.pending]: (state, action) => {\n            state.isFetching = true\n            state.error = null\n            state.issuccess = false\n        },\n        [addPromo.rejected]: (state, action) => {\n            state.isFetching = false\n            state.error = action.payload\n        },\n        [addPromo.fulfilled]: (state, action) => {\n            state.isFetching = false\n            state.error = null\n            state.issuccess = true\n        },\n        // updatepromo\n        [updatepromo.pending]: (state, action) => {\n            state.isFetching = true\n            state.error = null\n            state.issuccess = false\n        },\n        [updatepromo.rejected]: (state, action) => {\n            // alert(action.payload);\n            state.isFetching = false\n            state.error = action.payload\n        },\n        [updatepromo.fulfilled]: (state, action) => {\n            state.isFetching = false\n            state.error = null\n            // console.log(action.payload)\n            state.issuccess = true\n        },\n         // deletpromo\n         [deletpromo.pending]: (state, action) => {\n            state.isFetching = true\n            state.error = null\n            state.issuccess = false\n        },\n        [deletpromo.rejected]: (state, action) => {\n            state.isFetching = false\n            state.error = action.payload\n        },\n        [deletpromo.fulfilled]: (state, action) => {\n            state.isFetching = false\n            state.error = null\n            state.issuccess = true\n        },\n    }\n\n})\n\nexport const { logout } = counterSlice.actions\nexport default counterSlice.reducer\n"]},"metadata":{},"sourceType":"module"}