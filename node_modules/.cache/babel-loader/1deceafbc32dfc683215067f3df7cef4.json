{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { apiPostCall } from '../utility/site-apis';\nimport { message } from 'antd';\nconst initialState = {\n  isFetching: false,\n  error: null,\n  user: null,\n  token: null\n};\nexport const getPromo = createAsyncThunk('Promo/getPromo', async (params, {\n  rejectWithValue\n}) => {\n  const response = await apiGetCall(`/notify`, params);\n\n  if (response.data.status === 'error') {\n    return rejectWithValue(response.data);\n  }\n\n  return response.data;\n});\nexport const counterSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      state.user = null;\n      state.token = null;\n    }\n  },\n  extraReducers: {\n    // adminLogin\n    [adminLogin.pending]: state => {\n      state.isFetching = true;\n      state.error = null;\n    },\n    [adminLogin.rejected]: (state, action) => {\n      var _action$payload, _action$payload2;\n\n      message.error(action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.message);\n      state.isFetching = false;\n      state.error = action === null || action === void 0 ? void 0 : (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.message;\n    },\n    [adminLogin.fulfilled]: (state, action) => {\n      var _action$payload3, _action$payload3$data, _action$payload4;\n\n      state.isFetching = false;\n      state.error = null;\n      state.token = action === null || action === void 0 ? void 0 : (_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : (_action$payload3$data = _action$payload3.data) === null || _action$payload3$data === void 0 ? void 0 : _action$payload3$data.Authorization;\n      state.user = action === null || action === void 0 ? void 0 : (_action$payload4 = action.payload) === null || _action$payload4 === void 0 ? void 0 : _action$payload4.data;\n    }\n  }\n});\nexport const {\n  logout\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"sources":["/Users/sunita/Sites/Erptech/react-admin-poc/src/store/PromoRedux.js"],"names":["createAsyncThunk","createSlice","apiPostCall","message","initialState","isFetching","error","user","token","getPromo","params","rejectWithValue","response","apiGetCall","data","status","counterSlice","name","reducers","logout","state","extraReducers","adminLogin","pending","rejected","action","payload","fulfilled","Authorization","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,OAAT,QAAwB,MAAxB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,IAAI,EAAE,IAHa;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,OAAO,MAAMC,QAAQ,GAAGT,gBAAgB,CACpC,gBADoC,EAEpC,OAAOU,MAAP,EAAe;AAAEC,EAAAA;AAAF,CAAf,KAAuC;AACrC,QAAMC,QAAQ,GAAG,MAAMC,UAAU,CAAE,SAAF,EAAYH,MAAZ,CAAjC;;AACA,MAAIE,QAAQ,CAACE,IAAT,CAAcC,MAAd,KAAyB,OAA7B,EAAsC;AACpC,WAAOJ,eAAe,CAACC,QAAQ,CAACE,IAAV,CAAtB;AACD;;AACD,SAAOF,QAAQ,CAACE,IAAhB;AACD,CARmC,CAAjC;AAWP,OAAO,MAAME,YAAY,GAAGf,WAAW,CAAC;AACtCgB,EAAAA,IAAI,EAAE,MADgC;AAEtCb,EAAAA,YAFsC;AAGtCc,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAGC,KAAD,IAAW;AACjBA,MAAAA,KAAK,CAACb,IAAN,GAAa,IAAb;AACAa,MAAAA,KAAK,CAACZ,KAAN,GAAc,IAAd;AACD;AAJO,GAH4B;AAStCa,EAAAA,aAAa,EAAE;AACb;AACA,KAACC,UAAU,CAACC,OAAZ,GAAuBH,KAAD,IAAW;AAC/BA,MAAAA,KAAK,CAACf,UAAN,GAAmB,IAAnB;AACAe,MAAAA,KAAK,CAACd,KAAN,GAAc,IAAd;AACD,KALY;AAMb,KAACgB,UAAU,CAACE,QAAZ,GAAuB,CAACJ,KAAD,EAAQK,MAAR,KAAmB;AAAA;;AACxCtB,MAAAA,OAAO,CAACG,KAAR,CAAcmB,MAAd,aAAcA,MAAd,0CAAcA,MAAM,CAAEC,OAAtB,oDAAc,gBAAiBvB,OAA/B;AACAiB,MAAAA,KAAK,CAACf,UAAN,GAAmB,KAAnB;AACAe,MAAAA,KAAK,CAACd,KAAN,GAAcmB,MAAd,aAAcA,MAAd,2CAAcA,MAAM,CAAEC,OAAtB,qDAAc,iBAAiBvB,OAA/B;AACD,KAVY;AAWb,KAACmB,UAAU,CAACK,SAAZ,GAAwB,CAACP,KAAD,EAAQK,MAAR,KAAmB;AAAA;;AACzCL,MAAAA,KAAK,CAACf,UAAN,GAAmB,KAAnB;AACAe,MAAAA,KAAK,CAACd,KAAN,GAAc,IAAd;AACAc,MAAAA,KAAK,CAACZ,KAAN,GAAciB,MAAd,aAAcA,MAAd,2CAAcA,MAAM,CAAEC,OAAtB,8EAAc,iBAAiBZ,IAA/B,0DAAc,sBAAuBc,aAArC;AACAR,MAAAA,KAAK,CAACb,IAAN,GAAakB,MAAb,aAAaA,MAAb,2CAAaA,MAAM,CAAEC,OAArB,qDAAa,iBAAiBZ,IAA9B;AACD;AAhBY;AATuB,CAAD,CAAhC;AA8BP,OAAO,MAAM;AAAEK,EAAAA;AAAF,IAAaH,YAAY,CAACa,OAAhC;AACP,eAAeb,YAAY,CAACc,OAA5B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { apiPostCall } from '../utility/site-apis'\nimport { message } from 'antd';\n\nconst initialState = {\n  isFetching: false,\n  error: null,\n  user: null,\n  token: null,\n}\n\nexport const getPromo = createAsyncThunk(\n    'Promo/getPromo',\n    async (params, { rejectWithValue }) => {\n      const response = await apiGetCall(`/notify`, params)\n      if (response.data.status === 'error') {\n        return rejectWithValue(response.data)\n      }\n      return response.data\n    }\n  )\n\nexport const counterSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: (state) => {\n      state.user = null\n      state.token = null\n    },\n  },\n  extraReducers: {\n    // adminLogin\n    [adminLogin.pending]: (state) => {\n      state.isFetching = true\n      state.error = null\n    },\n    [adminLogin.rejected]: (state, action) => {\n      message.error(action?.payload?.message);\n      state.isFetching = false\n      state.error = action?.payload?.message\n    },\n    [adminLogin.fulfilled]: (state, action) => {\n      state.isFetching = false\n      state.error = null\n      state.token = action?.payload?.data?.Authorization\n      state.user = action?.payload?.data\n    },\n  }\n\n})\n\nexport const { logout } = counterSlice.actions\nexport default counterSlice.reducer\n"]},"metadata":{},"sourceType":"module"}